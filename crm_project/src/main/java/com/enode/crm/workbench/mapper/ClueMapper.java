package com.enode.crm.workbench.mapper;

import com.enode.crm.workbench.domain.Clue;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface ClueMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Tue Jul 22 14:06:42 KST 2025
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Tue Jul 22 14:06:42 KST 2025
     */
    int insert(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Tue Jul 22 14:06:42 KST 2025
     */
    int insertSelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Tue Jul 22 14:06:42 KST 2025
     */
    Clue selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Tue Jul 22 14:06:42 KST 2025
     */
    int updateByPrimaryKeySelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Tue Jul 22 14:06:42 KST 2025
     */
    int updateByPrimaryKey(Clue record);

    /**
     * 保存被创建的线索
     *
     * @param clue
     * @return
     */
    int insertClue(Clue clue);

    /**
     * 根据条件分页查询线索数据
     *
     * @param map
     * @return
     */
    List<Clue> selectClueByConditionForPage(Map<String, Object> map);

    /**
     * 根据条件查询线索总条数
     *
     * @param map
     * @return
     */
    int selectCountOfClueByCondition(Map<String, Object> map);

    /**
     * 通过id删除被选择的线索
     *
     * @param clueIds
     * @return
     */
    int deleteClueByIds(@Param("clueIds") String[] clueIds);

    /**
     * 根据id查询线索
     *
     * @param id
     * @return
     */
    Clue selectClueById(@Param("id") String id);

    /**
     * 更新线索数据
     *
     * @param clue
     * @return
     */
    int updateClue(Clue clue);
}